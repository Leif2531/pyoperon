name: build-linux

on:
  push:
    branches: [ cpp20 ]
  pull_request:
    branches: [ cpp20 ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  mamba-build:
    strategy:
      matrix:
        version: [ "3.8", "3.9", "3.10", "3.11" ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Conda environment from environment.yml
        uses: mamba-org/provision-with-micromamba@main
        with:
          extra-specs: |
            python=${{ matrix.version }}

      # Linux and macOS
      - name: Run Python
        shell: bash -l {0}
        run: |
          bash script/dependencies.sh # install dependencies
          python setup.py bdist_wheel # build the wheel

      - name: 'Build wheel'
        uses: actions/upload-artifact@v3
        with:
          name: pyoperon-wheel
          path: dist/*.whl
          retention-days: 7

  nix-build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v16

      - name: Build
        working-directory: ${{github.workspace}}
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: nix build
